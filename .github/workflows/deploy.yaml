name: Deploy to Production

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    container:
      image: node:lts-alpine

    steps:
      - name: Install SSH Client and Dependencies
        run: apk add --no-cache openssh

      - name: Install PNPM
        run: npm install -g pnpm
      
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Setup Node.js
        uses: actions/setup-node@v2

      - name: Install dependencies
        run: pnpm install

      - name: Build the application
        run: pnpm run build

      - name: Add SSH Key
        uses: webfactory/ssh-agent@v0.5.3
        with:
          ssh-private-key: ${{ secrets.VEGETA_SERVER }}

      - name: Deploy via SSH
        env:
          VEGETA_SERVER_IP: ${{ secrets.VEGETA_SERVER_IP }}
          EMAIL_ADDRESS: ${{ secrets.EMAIL_ADDRESS }}
          EMAIL_PASSWORD: ${{ secrets.EMAIL_PASSWORD }}
          IMAP_MAIL_SERVER_OUT: ${{ secrets.IMAP_MAIL_SERVER_OUT }}
          IMAP_MAIL_SERVER_PORT_OUT: ${{ secrets.IMAP_MAIL_SERVER_PORT_OUT }}
          NAME: ${{ secrets.NAME }}
          ADDR_STREET: ${{ secrets.ADDR_STREET }}
          ADDR_ZIP_AND_CITY: ${{ secrets.ADDR_ZIP_AND_CITY }}
          PHONE_NUMBER: ${{ secrets.PHONE_NUMBER }}
          UST_NR: ${{ secrets.UST_NR }}
        run: |
          ssh -o StrictHostKeyChecking=no vegeta@${{ secrets.VEGETA_SERVER_IP }} << 'EOF'
            cd ~/hosting/cypherweb
            git pull origin main
            echo "EMAIL_ADDRESS=${{ secrets.EMAIL_ADDRESS }}" > .env.local
            echo "EMAIL_PASSWORD=${{ secrets.EMAIL_PASSWORD }}" >> .env.local
            echo "IMAP_MAIL_SERVER_OUT=${{ secrets.IMAP_MAIL_SERVER_OUT }}" >> .env.local
            echo "IMAP_MAIL_SERVER_PORT_OUT=${{ secrets.IMAP_MAIL_SERVER_PORT_OUT }}" >> .env.local
            echo "NAME=${{ secrets.NAME }}" >> .env.local
            echo "ADDR_STREET=${{ secrets.ADDR_STREET }}" >> .env.local
            echo "ADDR_ZIP_AND_CITY=${{ secrets.ADDR_ZIP_AND_CITY }}" >> .env.local
            echo "PHONE_NUMBER=${{ secrets.PHONE_NUMBER }}" >> .env.local
            echo "UST_NR=${{ secrets.UST_NR }}" >> .env.local
            pnpm install
            pnpm run build
            pm2 reload cypherweb --update-env
          EOF
